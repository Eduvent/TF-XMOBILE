1--- Mostrar los dispositivos moviles que tengan un precio de venta menor a 1200 CORROBORADO
db.getCollection(
  'dispositivos_moviles'
).aggregate(
  [
    { $match: { precio: { $lt: '1200' } } },
    {
      $project: {
        _id: 0,
        codigo: 1,
        dispositivo: '$modelo',
        precio: 1
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
2---- Mostrar los dispositivos moviles que tengan una fecha de lanzamiento mayor a 2023-02-01 CORROBORADO
db.getCollection(
  'dispositivos_moviles'
).aggregate(
  [
    {
      $match: {
        fecha_lanzamiento: { $gt: '2023-02-01' }
      }
    },
    {
      $project: {
        codigo_marca: 1,
        fecha_lanzamiento: 1
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
3---- Usuarios que hallan nacido entre 1998 y 2000 CORROBORADO
db.getCollection('usuarios').aggregate(
  [
    {
      $match: {
        fecha_nacimiento: {
          $gte: '1998-01-01',
          $lte: '2000-12-31'
        }
      }
    },
    {
      $project: { codigo: 1, fecha_nacimiento: 1 }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
4----Hallar el promedio de los precios de los dispositivos que esten entre la fecha de lanzamiento "2022-01-01" y "2023-01-01" CORROBORADO
db.getCollection(
  'dispositivos_moviles'
).aggregate(
  [
    {
      $match: {
        fecha_lanzamiento: {
          $gte: '2022-01-01',
          $lt: '2023-01-01'
        }
      }
    },
    {
      $group: {
        _id: null,
        average_price: {
          $avg: {
            $convert: {
              input: '$precio',
              to: 'decimal'
            }
          }
        }
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
5---Mostrar historiales de busqueda con una fecha menor a la fecha 2023-02-01 CORROBORADO
db.getCollection('historial_busquedas').aggregate(
  [
    { $match: { fecha: { $lt: '2023-02-01' } } },
    { $project: { fecha: 1, codigo: 1 } }
  ],
);
6---Se pide mostrar las calificaciones con una nota mayor a 6 CORROBORADO
db.getCollection('resenas').aggregate(
  [
    {
      $match: {
        calificacion: { $gt: '6' },
        comentario: { $exists: true }
      }
    },
    {
      $project: { comentario: 1, calificacion: 1 }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
7-- Mostrar los dispositivos moviles que sean de todas las marcas menos Samsung, Xiami y Honor
db.getCollection(
  'dispositivos_moviles'
).aggregate(
  [
    {
      $match: {
        codigo_marca: { $nin: ['1', '3', '5'] }
      }
    },
    { $project: { modelo: 1 } }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);

8-- Nombres de usuarios que empiecen con "J"
db.getCollection('usuarios').aggregate(
  [
    { $match: { nombre: RegExp('^J') } },
    { $project: { nombre: 1, codigo: 1 } }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);

